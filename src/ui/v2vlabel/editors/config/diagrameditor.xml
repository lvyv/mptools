<mxEditor defaultEdge="connector" defaultGroup="group">
	<include name="config/editor-commons.xml" />
	<add as="onInit">
		function ()
		{
			onInit(this);
		}
	</add>
	<ui>
		<add as="graph" element="graph" />
		<add as="status" element="status" />
		<add as="toolbar" element="toolbar" />
	</ui>
	<Array as="templates">
		<add as="group">
			<Group href="" label="">
				<mxCell connectable="0" style="group" vertex="1" />
			</Group>
		</add>
		<add as="connector">
			<Connector href="" label="">
				<mxCell edge="1">
					<mxGeometry as="geometry" relative="1" />
				</mxCell>
			</Connector>
		</add>
		<add as="container">
			<Container href="" label="Container">
				<mxCell connectable="0" style="swimlane" vertex="1">
					<mxGeometry as="geometry" height="200" width="200" />
				</mxCell>
			</Container>
		</add>
		<add as="rectangle">
			<Rect href="https://127.0.0.1:7180/api/v1/ai/panel" label="OCR_">
				<mxCell vertex="1">	
					<mxGeometry as="geometry" height="40" width="80" />
				</mxCell>
			</Rect>
		</add>
		<add as="rounded">
			<Roundrect href="https://90.90.90.90:7180/api/v1/ai/plc" label="PLC_">
				<mxCell style="rounded" vertex="1">		
					<mxGeometry as="geometry" height="40" width="80" />
				</mxCell>
			</Roundrect>
		</add>
		<add as="actor">
			<Shape href="https://127.0.0.1:7180/api/v1/ai/person" label="CNT_">
				<mxCell style="actor" vertex="1">		
					<mxGeometry as="geometry" height="60" width="40" />
				</mxCell>
			</Shape>
		</add>
		<add as="text">
			<Text href="" label="Text Here">
				<mxCell style="text" vertex="1">	
					<mxGeometry as="geometry" height="20" width="80" />
				</mxCell>
			</Text>
		</add>
		<add as="image">
			<Image href="" label="">
				<mxCell style="image" vertex="1">	
					<mxGeometry as="geometry" height="50" width="80" />
				</mxCell>
			</Image>
		</add>
		<add as="shape">
			<Shape href="" label="Shape">
				<mxCell style="ellipse" vertex="1">		
					<mxGeometry as="geometry" height="60" width="60" />
				</mxCell>
			</Shape>
		</add>

		<add as="cloud">
			<Shape href="" label="Shape">
				<mxCell style="cloud" vertex="1">		
					<mxGeometry as="geometry" height="60" width="80" />
				</mxCell>
			</Shape>
		</add>
		<add as="hline">
			<Shape href="" label="">
				<mxCell style="ellipse" vertex="1">		
					<mxGeometry as="geometry" height="10" width="60" />
				</mxCell>
			</Shape>
		</add>
	</Array>
	<mxGraph allowLoops="1" alternateEdgeStyle="verticalConnector" as="graph" dropEnabled="1">
		<add as="isAutoSizeCell">
			function(cell)
			{
				return mxUtils.isNode(this.model.getValue(cell), 'text');
			}
		</add>
		<add as="isSwimlane">
			function (cell)
			{
				return mxUtils.isNode(this.model.getValue(cell), 'container');
			}
		</add>
		<add as="getTooltipForCell">
			function(cell)
			{
				var label = cell.getAttribute('label');
				var style = cell.getStyle();
			
				return ((label != null) ? ('&lt;b&gt;' + label +
						'&lt;/b&gt; (' + cell.getId() + ')&lt;br&gt;') : '') +
						((style != null) ? ('&lt;br&gt;Style: ' + style + '&lt;br&gt;') : '') +
						'Connections: ' + cell.getEdgeCount()+
						'&lt;br&gt;Children: ' + cell.getChildCount();
			}
		</add>
		<add as="convertValueToString">
			function(cell)
			{
				return cell.getAttribute('label');
			}
		</add>
		<mxStylesheet as="stylesheet">
			<add as="text">
				<add as="shape" value="rectangle" />
				<add as="perimeter" value="rectanglePerimeter" />
				<add as="fontSize" value="12" />
				<add as="fontColor" value="red" />
				<add as="align" value="left" />
				<add as="verticalAlign" value="top" />
				<add as="shadow" value="0" />
				<add as="strokeColor" value="none" />
				<add as="fillColor" value="none" />
				<add as="gradientColor" value="none" />
			</add>
			<add as="defaultVertex" extend="text">
				<add as="shape" value="rectangle" />
				<add as="fontSize" value="11" />
				<add as="fontColor" value="grey" />
				<add as="align" value="center" />
				<add as="verticalAlign" value="middle" />
				<add as="shadow" value="0" />
				<add as="strokeColor" value="#FF0000" />
				<add as="strokeWidth" value="1" />
				<add as="fillColor" value="none" />
				<add as="gradientColor" value="white" />
			</add>
			<add as="group">
				<add as="shape" value="rectangle" />
				<add as="perimeter" value="rectanglePerimeter" />
				<add as="fontSize" value="10" />
				<add as="align" value="center" />
				<add as="verticalAlign" value="middle" />
				<add as="strokeColor" value="gray" />
				<add as="dashed" value="1" />
			</add>
			<add as="defaultEdge">
				<add as="shape" value="connector" />
				<add as="fontSize" value="10" />
				<add as="align" value="center" />
				<add as="verticalAlign" value="middle" />
				<add as="rounded" value="1" />
				<add as="labelBackgroundColor" value="white" />
				<add as="strokeColor" value="#FF0000" />
				<add as="strokeWidth" value="3" />
				<add as="edgeStyle" value="elbowEdgeStyle" />
				<add as="endArrow" value="classic" />
			</add>
			<add as="verticalConnector">
				<add as="elbow" value="vertical" />
			</add>
			<add as="straightConnector">
				<add as="shape" value="connector" />
				<add as="endArrow" value="classic" />
				<add as="edgeStyle">null</add>
			</add>
			<add as="arrowConnector">
				<add as="shape" value="arrow" />
				<add as="fillColor" value="#C3D9FF" />
				<add as="endSize" value="20" />
				<remove as="edgeStyle" />
			</add>
			<add as="swimlane">
				<add as="shape" value="swimlane" />
				<add as="shadow" value="0" />
				<add as="startSize" value="23" />
				<add as="align" value="center" />
				<add as="verticalAlign" value="top" />
				<add as="strokeColor" value="#EEEEEE" />
				<add as="fillColor" value="#D4D4D4" />
			</add>
			<add as="rounded">
				<add as="rounded" value="1" />
			</add>
			<add as="ellipse">
				<add as="shape" value="ellipse" />
				<add as="perimeter" value="ellipsePerimeter" />
				<add as="strokeColor" value="#FF0000" />
				<add as="fillColor" value="none" />
			</add>
			<add as="doubleEllipse" extend="ellipse">
				<add as="shape" value="doubleEllipse" />
			</add>
			<add as="rhombus">
				<add as="shape" value="rhombus" />
				<add as="perimeter" value="rhombusPerimeter" />
				<add as="strokeColor" value="#FFCF8A" />
				<add as="fillColor" value="#FFCF8A" />
			</add>
			<add as="triangle" extend="rhombus">
				<add as="shape" value="triangle" />
				<add as="perimeter" value="trianglePerimeter" />
				<add as="align" value="left" />
			</add>
			<add as="hexagon">
				<add as="shape" value="hexagon" />
			</add>
			<add as="actor">
				<add as="shape" value="actor" />
				<add as="strokeColor" value="#FF0000" />
				
			</add>
			<add as="cloud">
				<add as="shape" value="cloud" />
				<add as="perimeter" value="ellipsePerimeter" />
				<add as="strokeColor" value="#CDEB8B" />
				<add as="fillColor" value="#CDEB8B" />
			</add>
			<add as="cylinder">
				<add as="shape" value="cylinder" />
				<add as="spacingTop" value="10" />
				<add as="strokeColor" value="#4096EE" />
				<add as="fillColor" value="#4096EE" />
			</add>
			<add as="hline">
				<add as="shape" value="line" />
				<add as="strokeWidth" value="3" />
				<add as="perimeter" value="rectanglePerimeter" />
				<add as="fontColor" value="black" />
				<add as="fontSize" value="10" />
				<add as="align" value="center" />
				<add as="verticalAlign" value="bottom" />
				<add as="strokeColor" value="#36393D" />
			</add>
			<add as="image">
				<add as="shape" value="image" />
				<add as="perimeter" value="rectanglePerimeter" />
				<add as="fontSize" value="10" />
				<add as="align" value="center" />
				<add as="verticalAlign" value="middle" />
				<add as="image" value="images/draw/mxlogo.jpg" />
			</add>
		</mxStylesheet>
		<mxGraphModel as="model">
			<add as="valueForCellChanged">
				function(cell, value)
				{
					var previous = null;
					
					if (value == null || isNaN(value.nodeType))
					{
						previous = cell.value.getAttribute('label');

						if (value == null)
						{
							cell.value.removeAttribute('label');
						}
						else
						{
							cell.setAttribute('label', value);
						}
					}
					else
					{
						previous = cell.value;
						cell.value = value;
					}
					
					return previous;
				}
			</add>
			<root>
				<Diagram href="https://github.com/lvyv/mptools" id="0" label="&#29031;&#29255;&#26631;&#27880;">
					<mxCell />
				</Diagram>
				<Layer id="1" label="Default Layer">
					<mxCell parent="0" />
				</Layer>
			</root>
		</mxGraphModel>
	</mxGraph>
	<mxDefaultToolbar as="toolbar">
		<add as="&#36873;&#25321;" icon="images/select.gif" mode="connect">
			function (editor)
			{

			}
		</add>
		
		<br /><br />
		
		<add as="&#20154;&#25968;&#32479;&#35745;" icon="images/actor.gif" style="actor" template="actor" />
		
		<add as="&#20202;&#34920;&#21028;&#35835;" icon="images/rectangle.gif" template="rectangle" />
		<add as="&#25351;&#31034;&#28783;&#39057;&#29575;" icon="images/rounded.gif" template="rounded" />
		<br /><br />
		<add as="Ellipse&#25193;&#23637;&#27169;&#22411;" icon="images/ellipse.gif" style="ellipse" template="shape" />
		
	</mxDefaultToolbar>
</mxEditor>